{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "crprunner"
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "crprunner1!"
        },
        "numberOfVMInstances": {
            "type": "int",
            "defaultValue": 2
        },
        "region": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A2"
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16"
        },
        "subnet1Name": {
            "type": "string",
            "defaultValue": "Subnet-1"
        },
        "subnet2Name": {
            "type": "string",
            "defaultValue": "Subnet-2"
        },
        "subnet1Prefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24"
        },
        "subnet2Prefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24"
        },
		"imageName": {
            "type": "string",
            "defaultValue": "CRPVMImageTestImage"
        },
		"availabilitySetName": {
			"type": "string",
            "defaultValue": "CRPVMImageTestAvSet"
		},
		"imageOSDiskBlobUri" : {
            "type": "string",
        },
		"imageDataDisk0BlobUri" : {
			"type": "string",
		},
        "windowsOSVersion": {
            "type": "string",
			"defaultValue": "2012-R2-Datacenter",
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
            }
        }
    },
    "variables": {
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]"
    },
    "resources": [
        {
			"type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2014-12-01-preview",            
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('region')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet2Prefix')]"
                        }
                    }
                ]
            }
        },
        {
			"type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2014-12-01-preview",            
            "name": "[concat('publicIP', copyIndex())]",
            "location": "[parameters('region')]",
            "copy": {
                "name": "publicIPLoop",
                "count": "[parameters('numberOfVMInstances')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
			"type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2014-12-01-preview",            
            "name": "[concat('nic', copyindex())]",
            "location": "[parameters('region')]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('numberOfVMInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', 'publicIP', copyindex())]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat('publicIP', copyindex()))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ]
            }
        },
		{
            "type": "Microsoft.Compute/images",
			"apiVersion": "2016-04-30-preview",
            "name": "[parameters('imageName')]",
            "location": "[parameters('region')]",
            "properties": {
                "storageProfile": {
                    "osDisk" : { 
                        "osType" : "windows",
						"osState": "Generalized",
						"blobUri": "[parameters('imageOSDiskBlobUri')]",
						"caching": "ReadWrite",
						"storageAccountType": "Standard_LRS"
                    },
					"dataDisks" : [
						{
							"blobUri": "[parameters('imageDataDisk0BlobUri')]",
							"caching": "ReadWrite",
							"storageAccountType": "Standard_LRS",
							"lun": "0"
						}
					]
                }
            }
        },
		{ 
			"type": "Microsoft.Compute/availabilitySets", 
			"apiVersion": "2016-04-30-preview",
			"name": "[parameters('availabilitySetName')]",	
			"location": "[parameters('region')]",
			"properties": { 
				"platformFaultDomainCount": "2", 
				"platformUpdateDomainCount": "2",
				"managed": "true"
			}
		},
        {
			"type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-04-30-preview",            
            "name": "[concat('windowsVM', copyindex())]",
            "location": "[parameters('region')]",
			"copy": {
                "name": "vmLoop",
                "count": "[parameters('numberOfVMInstances')]"
            },
            "dependsOn": [
			    "[concat('Microsoft.Network/networkInterfaces/', concat('nic', copyindex()))]",
                "[concat('Microsoft.Compute/images/', parameters('imageName'))]",
				"[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
            ],
            "properties": {
				"availabilitySet": { 
					"id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"					
				},
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat('windowsVM', copyindex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": { 
                         "id" : "[resourceId('Microsoft.Compute/images', parameters('imageName'))]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic', copyindex()))]"
                        }
                    ]
                }
            }
        }
    ]
}

